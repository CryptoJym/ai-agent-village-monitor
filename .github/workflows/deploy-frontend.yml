name: Deploy Frontend (Vercel)

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: vercel-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm -C packages/frontend build

      - name: Install Vercel CLI
        run: pnpm dlx vercel@latest --version

      - name: Pull Vercel env (preview)
        if: github.event_name == 'pull_request'
        run: pnpm dlx vercel pull --environment=preview --yes --token ${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel env (production)
        if: github.event_name == 'push'
        run: pnpm dlx vercel pull --environment=production --yes --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build Vercel output (preview)
        if: github.event_name == 'pull_request'
        run: pnpm dlx vercel build --token ${{ secrets.VERCEL_TOKEN }}
      - name: Build Vercel output (production)
        if: github.event_name == 'push'
        run: pnpm dlx vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy (preview)
        if: github.event_name == 'pull_request'
        run: pnpm dlx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy (production)
        if: github.event_name == 'push'
        run: pnpm dlx vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}

